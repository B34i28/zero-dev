import { AccountAPIConstructor, BaseAccountAPI, BaseApiParams } from './BaseAccountAPI';
import { GnosisAccountAPI, GnosisAccountApiParams } from './GnosisAccountAPI';
import { KernelAccountAPI, KernelAccountApiParams } from './KernelAccountAPI';
import { SimpleAccountAPI, SimpleAccountApiParams } from './SimpleAccountAPI';
export interface AccountImplementation<T extends BaseAccountAPI = BaseAccountAPI, A extends BaseApiParams = BaseApiParams> {
    factoryAddress: string;
    accountAPIClass: AccountAPIConstructor<T, A>;
}
export declare const gnosisSafeAccount_v1_unaudited: AccountImplementation<GnosisAccountAPI, GnosisAccountApiParams>;
export declare const kernelAccount_v1_audited: AccountImplementation<KernelAccountAPI, KernelAccountApiParams>;
export declare const simpleAccount_v1_audited: AccountImplementation<SimpleAccountAPI, SimpleAccountApiParams>;
