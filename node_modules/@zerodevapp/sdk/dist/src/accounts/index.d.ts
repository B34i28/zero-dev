import { AccountAPIConstructor, BaseAccountAPI, BaseApiParams } from '../BaseAccountAPI';
import { GnosisAccountAPI, GnosisAccountApiParams } from '../GnosisAccountAPI';
import { KernelAccountAPI, KernelAccountApiParams } from '../KernelAccountAPI';
import { SimpleAccountAPI, SimpleAccountApiParams } from '../SimpleAccountAPI';
export interface AccountImplementation<T extends BaseAccountAPI = BaseAccountAPI, A extends BaseApiParams = BaseApiParams> {
    factoryAddress: string;
    accountAPIClass: AccountAPIConstructor<T, A>;
}
export declare const gnosisSafeAccount_unaudited: AccountImplementation<GnosisAccountAPI, GnosisAccountApiParams>;
export declare const kernelAccount_audited: AccountImplementation<KernelAccountAPI, KernelAccountApiParams>;
export declare const simpleAccount_audited: AccountImplementation<SimpleAccountAPI, SimpleAccountApiParams>;
